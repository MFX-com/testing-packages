name: Auto Merge

on:
  pull_request:
    branches:
      - main
      - staging
    types:
      - labeled
      - unlabeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked
  pull_request_review:
    types:
      - submitted
      - edited
  check_suite:
    branches:
      - main
      - staging
    types:
      - completed

env:
  GH_TEAM: ${{ github.base_ref == 'main' && 'mfx_prod' || 'mfx_staging' }}

jobs:
  automerge:
    runs-on: ubuntu-latest
    steps:
      - name: Find Current Pull Request
        uses: jwalton/gh-find-current-pr@v1.3.2
        id: findPr

      # Check for all current approvals if they match with appropriate GH team
      - name: Checking for PR permissions
        shell: bash
        run: |
          function exists_in_list() {
              LIST=$1
              DELIMITER=$2
              VALUE=$3
              LIST_WHITESPACES=$(echo "$LIST" | tr "$DELIMITER" " ")
              for x in $LIST_WHITESPACES; do
              if [ "$x" = "$VALUE" ]; then
              return 0
              fi
              done
              return 1
          }

          approvedUsers=($(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.BOT_ACCESS_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/MFX-com/testing-packages/pulls/${{ steps.findPr.outputs.pr }}/reviews | jq -r '.[] | select(.state == "APPROVED") | .user.id'))

          teamUserIDs=($(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.BOT_ACCESS_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/orgs/MFX-com/teams/${{ env.GH_TEAM }}/members | jq  -r '.[].id'))

          COUNTER=0
          for value in "${approvedUsers[@]}"
          do
            if exists_in_list "$teamUserIDs" " " $value; then
              echo "$value is a valid user from the users list which are allowed to merge"
              COUNTER=$((COUNTER+1))
            else
              echo "$value is NOT in the list of valid users to merge"
            fi
          done
          
          if [[ $COUNTER -gt 0 ]] ; then
            echo "Allowed to merge."
          else
            echo "Not merging."
            exit 1
          fi

      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}

      - name: Enable merge commits
        run: |
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.BOT_ACCESS_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/MFX-com/testing-packages \
            -d '{"allow_merge_commit":true}' \
            --output /dev/null

      - name: Automatic merge
        id: auto-merge
        uses: pascalgn/automerge-action@v0.15.6
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          MERGE_METHOD: merge
          LOG: DEBUG

      - name: Disable merge commits
        run: |
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.BOT_ACCESS_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/MFX-com/testing-packages \
            -d '{"allow_merge_commit":false}' \
            --output /dev/null
