name: Deploy Dev

#on:
#  workflow_call:
#    inputs:
#      commit-sha:
#        required: true
#        type: string
#        description: Commit SHA
#      branch:
#        required: true
#        type: string
#        description: Branch

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Apply schemas
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      ENV: dev
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.NPM_TOKEN }}
#          ref: ${{ inputs.commit-sha }}

      - name: Check for schema changes
        id: checking
        shell: bash
        run: |
          echo "Test"

      - name: Initialize git config
        run: |
          git config --global user.name "nexera-release[bot]"
          git config --global user.email "137495321+nexera-release[bot]@users.noreply.github.com"

      - name: Install dependencies
        shell: bash
        run: |
          wget -O /usr/local/bin/semver https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver
          chmod +x /usr/local/bin/semver
          semver --version

      - name: Get current version
        id: versions
        shell: bash
        run: |
          current=$(cat polygon-id/id3/id3.json | jq -r '.["$metadata"].version')
          target=$(semver bump patch $current)
          echo "current=$current" >> $GITHUB_OUTPUT
          echo "target=$target" >> $GITHUB_OUTPUT

      - name: Update version
        shell: bash
        run: |
          find examples/**/*.json -type f -exec sed -i -e 's/\/${{ steps.versions.outputs.current }}\//\/${{ steps.versions.outputs.target }}\//g' {} +
          
          find polygon-id/**/*.json -type f -exec sed -i -e 's/\/${{ steps.versions.outputs.current }}\//\/${{ steps.versions.outputs.target }}\//g' {} +

      - name: Copy schemas to IPFS directory
        shell: bash
        run: |
          find ipfs/ -mindepth 1 -type d -exec rm -rf {} \;
          cp -r polygon-id/* ipfs/
          ls -al ipfs/

      - name: Upload jsonID to IPFS and replace uris with hash in json schemas
        shell: bash
        run: |
          # Find all jsonLD files in the ipfs/ folder
          for file in $(find ipfs/ -type f -name "*.jsonId"); do
            echo "JsonLD file: $file"

            # Upload json
            response=$(curl "https://ipfs.infura.io:5001/api/v0/add" -X POST -F file=@"$file" -u "${{ secrets.INFURA_IPFS_API_KEY }}:${{ secrets.INFURA_IPFS_API_KEY_SECRET }}")
            echo "$response"
          
            # Parse HASH from uploaded file
            ipfs_hash=$(echo "$response" | jq -r '.Hash')
            echo "$ipfs_hash"

            # Set the json file path
            replacement=".json"
            json_file_path="${file/.jsonld/$replacement}"
            echo "JSON file: $json_file_path"

            # Perform update
            jq '.["$metadata"].uris.jsonLdContext = "ipfs://'"$ipfs_hash"'"' "$json_file_path" > temp.json && mv temp.json "$json_file_path"
          done

      - name: Upload schemas to issuer
        shell: bash
        run: |
          for file in $(find ipfs/ -type f -name "*.json"); do
            echo "JSON file: $file"
            cat "$file"
          done

      - name: Commit changes
        shell: bash
        run: |
          echo "Test"


#  version-bump:
#    needs: release
#    name: Bump version only
#    runs-on: ubuntu-latest
#    env:
#      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#      ENV: dev
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          token: ${{ secrets.NPM_TOKEN }}
##          ref: ${{ inputs.branch }}
#
#      - name: Get current version
#        id: current_version
#        shell: bash
#        run: |
#          echo "Test"
#          version="2.5.6"
#          echo "version=$version" >> $GITHUB_OUTPUT
#
#      - name: Update version
#        shell: bash
#        run: |
#          find examples/**/*.json -type f -exec sed -i -e 's/\/development\//\/staging\//g' {} +
#
#          find polygon-id/**/*.json -type f -exec sed -i -e 's/\/development\//\/staging\//g' {} +
