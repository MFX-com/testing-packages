name: SDK Release - publish

on:
  pull_request:
    types:
      - closed
    branches:
      - development
      - main

jobs:
  publish:
    if: github.event.pull_request.merged == true && false == true # Condition
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 20.12.0 ]
        pnpm-version: [ 8.15.6 ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Config git user
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - uses: pnpm/action-setup@v3.0.0
        name: Install pnpm
        id: pnpm-install
        with:
          version: ${{ matrix.pnpm-version }}
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}

      - uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: |
          pnpm install --no-frozen-lockfile

      - name: Version packages
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          lerna version --yes --conventional-commits --create-release github --message 'chore(release): publish'
