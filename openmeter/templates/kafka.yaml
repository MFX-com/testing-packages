apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: {{ include "openmeter.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "openmeter.labels" . | nindent 4 }}
spec:
  kafka:
    version: 3.6.0
    replicas: 1
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
    config:
      offsets.topic.replication.factor: 1
      transaction.state.log.replication.factor: 1
      transaction.state.log.min.isr: 1
      default.replication.factor: 1
      min.insync.replicas: 1
      inter.broker.protocol.version: "3.6"
    storage:
      type: jbod
      volumes:
        - id: 0
          type: persistent-claim
          size: 10Gi
          class: gp2-enc
          deleteClaim: true
    template:
      podDisruptionBudget:
        maxUnavailable: 0
  zookeeper:
    replicas: 1
    storage:
      type: persistent-claim
      size: 10Gi
      class: gp2-enc
      deleteClaim: true
  entityOperator:
    topicOperator: {}
    userOperator: {}
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnect
metadata:
  name: {{ include "openmeter.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "openmeter.labels" . | nindent 4 }}
  annotations:
    strimzi.io/use-connector-resources: "true"
spec:
  # TODO: build a custom image with the clickhouse-kafka-connect plugin
  # image: .../clickhouse-kafka-connect
  replicas: 1
  bootstrapServers: {{ include "openmeter.fullname" . }}-kafka-bootstrap:9092
  config:
    group.id: {{ include "openmeter.fullname" . }}-kafka-connect
    offset.storage.topic: _{{ include "openmeter.fullname" . }}-kafka-connect-configs
    config.storage.topic: _{{ include "openmeter.fullname" . }}-kafka-connect-offsets
    status.storage.topic: _{{ include "openmeter.fullname" . }}-kafka-connect-status
    key.converter: org.apache.kafka.connect.storage.StringConverter
    value.converter: org.apache.kafka.connect.json.JsonConverter
    key.converter.schemas.enable: false
    value.converter.schemas.enable: false
    schemas.enable: false
    config.storage.replication.factor: 1
    offset.storage.replication.factor: 1
    status.storage.replication.factor: 1
  build:
    output:
      type: docker
      # This image will last only for 24 hours and might be overwritten by other users
      # Strimzi will use this tag to push the image. But it will use the digest to pull
      # the container image to make sure it pulls exactly the image we just built. So
      # it should not happen that you pull someone else's container image. However, we
      # recommend changing this to your own container registry or using a different
      # image name for any other than demo purposes.
      image: ttl.sh/clickhouse-kafka-connect:24h
    plugins:
      - name: clickhouse-kafka-connect
        artifacts:
          - type: zip
            url: https://github.com/ClickHouse/clickhouse-kafka-connect/releases/download/v1.0.1/clickhouse-kafka-connect-v1.0.1.zip
            sha512sum: 1ec5036eed8d831baa27ba4c4c5232059ef76ba2d57e7d1b99207fd5d880ed0309e8950947db212dfad3b23f5a44bb1d3631c83fe7d5bbe294a8eabad5acc8b9
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnector
metadata:
  name: {{ include "openmeter.fullname" . }}
  labels:
    strimzi.io/cluster: {{ include "openmeter.fullname" . }}
spec:
  class: com.clickhouse.kafka.connect.ClickHouseSinkConnector
  tasksMax: 2
  autoRestart:
    enabled: true
  config:
    hostname: clickhouse-{{ include "openmeter.fullname" . }}
    port: 8123
    ssl: false
    username: default
    password: ""
    database: default
    errors.retry.timeout: 30
    topics.regex: "^om_[A-Za-z0-9]+(?:_[A-Za-z0-9]+)*_events$"
    errors.deadletterqueue.topic.name: om_deadletterqueue
    errors.deadletterqueue.topic.replication.factor: 1
    errors.deadletterqueue.context.headers.enable: true
